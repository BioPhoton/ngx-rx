# TODO: https://github.com/actions/create-release/issues/64#issuecomment-638695206

name: Create State Release

on:
  push:
  # Sequence of patterns matched against refs/tags
  tags:
  - 'state@*' # Push events to matching state@*, i.e. state@1.0, state@20.15.10


jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
        - run: git fetch --no-tags --prune --depth=5 origin master
        - run: npm install --frozen-lockfile --non-interactive
        - run: npm run build-docs-page
  - name: set Environment Variables
      id: set_env_var
      run: |
        VERSION=$(sed 's/[^0-9|.]//g' _Release.h)  # zb. 2.4.2
        if [ $REPOSITORY = "master" ]; then IS_PRE='false'; else IS_PRE='true'; fi
        if [ $REPOSITORY = "master" ]; then POSTFIX=''    ; else POSTFIX='PRE';    fi
        RELEASEBODY=$(awk -v RS='Release ' '/'$VERSION':(.*)/ {print $0}' ChangeLog.h)
        RELEASEBODY="${RELEASEBODY//'%'/'%25'}"
        RELEASEBODY="${RELEASEBODY//$'\n'/'%0A'}"
        RELEASEBODY="${RELEASEBODY//$'\r'/'%0D'}"
        echo "::set-output name=version::${VERSION}"
        echo "::set-output name=IS_PRERELEASE::${IS_PRE}"
        echo "::set-output name=RELEASENAME_POSTFIX::${POSTFIX}"
        echo "::set-output name=RELEASEBODY::${RELEASEBODY}"
        echo "::set-env name=body::${RELEASEBODY}"
      env:
        REPOSITORY: ${{ github.event.repository.name }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: v.${{ steps.set_env_var.outputs.version }}
          release_name: Release ${{ steps.set_env_var.outputs.version }} ${{ steps.set_env_var.outputs.RELEASENAME_POSTFIX }}
          body: |
            ${{ steps.set_env_var.outputs.RELEASEBODY }}
          draft: false
          prerelease: ${{ steps.set_env_var.outputs.IS_PRERELEASE }}
